{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "ACR HL7 Listener",
    "description": "Service for receiving HL7 messages"
  },
  "paths": {
    "/api/Listeners": {
      "get": {
        "tags": [
          "Listeners"
        ],
        "summary": "Get all listeners",
        "description": "Obtains all available listeners for the running service.",
        "operationId": "GetListeners",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns the available listeners",
            "schema": {
              "title": "Swashbuckle.AspNetCore.Swagger.Schema",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/HL7MessageListener"
              }
            }
          },
          "500": {
            "description": "Bad input parameter"
          }
        }
      },
      "post": {
        "tags": [
          "Listeners"
        ],
        "summary": "Post listener",
        "description": "Adds a listener.",
        "operationId": "PostListener",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "listener",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HL7MessageListener"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Listener created",
            "schema": {
              "$ref": "#/definitions/HL7MessageListener"
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/Listeners/{id}": {
      "get": {
        "tags": [
          "Listeners"
        ],
        "summary": "Get listener",
        "description": "Gets a listener by its id.",
        "operationId": "GetListener",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HL7MessageListener"
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": [
          "Listeners"
        ],
        "summary": "Put listener",
        "description": "Updates a listener specified by the given id.",
        "operationId": "PutListener",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "listener",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HL7MessageListener"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated listener",
            "schema": {
              "$ref": "#/definitions/HL7MessageListener"
            }
          },
          "400": {
            "description": "Mismatch between passed id and listener id",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Listeners"
        ],
        "summary": "Delete listener",
        "description": "Deletes a listener.",
        "operationId": "DeleteListener",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Listener deleted",
            "schema": {
              "$ref": "#/definitions/HL7MessageListener"
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/Logs": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Get logs",
        "description": "Gets the logs.",
        "operationId": "Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "title": "Swashbuckle.AspNetCore.Swagger.Schema",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/HL7ListenerLog"
              }
            }
          }
        }
      }
    },
    "/api/Logs/in/{seconds}": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Get logs within seconds",
        "description": "Get list of all logs with in a timespan of give senconds.",
        "operationId": "GetWithin",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "seconds",
            "in": "path",
            "description": "Specify number of seconds, to retrieve all recent logs logged in the timespan.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "title": "Swashbuckle.AspNetCore.Swagger.Schema",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/HL7ListenerLog"
              }
            }
          }
        }
      }
    },
    "/api/Status/healthcheck": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "HealthCheck",
        "description": "Checks the health status of the server.",
        "operationId": "HealthCheck",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The health of the server",
            "schema": {
              "title": "Swashbuckle.AspNetCore.Swagger.Schema",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "title": "Swashbuckle.AspNetCore.Swagger.Schema",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/Status/version": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Version",
        "description": "Checks the version of the server.",
        "operationId": "Version",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The version of the server",
            "schema": {
              "title": "Swashbuckle.AspNetCore.Swagger.Schema",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "title": "Swashbuckle.AspNetCore.Swagger.Schema",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "HL7MessageListener": {
      "title": "Swashbuckle.AspNetCore.Swagger.Schema",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "title": "Swashbuckle.AspNetCore.Swagger.Schema",
          "type": "integer"
        },
        "ipAddress": {
          "title": "Swashbuckle.AspNetCore.Swagger.Schema",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "title": "Swashbuckle.AspNetCore.Swagger.Schema",
          "type": "integer"
        },
        "name": {
          "title": "Swashbuckle.AspNetCore.Swagger.Schema",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "title": "Swashbuckle.AspNetCore.Swagger.Schema",
          "description": "\r\n0 = Idle\r\n1 = Listening",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        }
      },
      "example": {
        "id": 1,
        "ipAddress": "0.0.0.0",
        "port": 50500,
        "name": "Test HL7",
        "status": 0
      }
    },
    "ProblemDetails": {
      "title": "Swashbuckle.AspNetCore.Swagger.Schema",
      "type": "object",
      "properties": {
        "type": {
          "title": "Swashbuckle.AspNetCore.Swagger.Schema",
          "type": "string"
        },
        "title": {
          "title": "Swashbuckle.AspNetCore.Swagger.Schema",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "title": "Swashbuckle.AspNetCore.Swagger.Schema",
          "type": "integer"
        },
        "detail": {
          "title": "Swashbuckle.AspNetCore.Swagger.Schema",
          "type": "string"
        },
        "instance": {
          "title": "Swashbuckle.AspNetCore.Swagger.Schema",
          "type": "string"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "HL7ListenerLog": {
      "title": "Swashbuckle.AspNetCore.Swagger.Schema",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "title": "Swashbuckle.AspNetCore.Swagger.Schema",
          "type": "integer"
        },
        "message": {
          "title": "Swashbuckle.AspNetCore.Swagger.Schema",
          "type": "string"
        },
        "time": {
          "format": "int64",
          "title": "Swashbuckle.AspNetCore.Swagger.Schema",
          "type": "integer"
        }
      },
      "example": {
        "id": 1,
        "time": "2019-08-28 11:15 AM",
        "message": "Starting listener on 0.0.0.0:50500"
      }
    }
  },
  "host": "private-a1ea5-acrconnecthl7listenerservicetest.apiary-mock.com",
  "schemes": [
    "http"
  ]
}